"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const attributeDevice_1 = require("../lib/attributeDevice");
const zigbee_clusters_1 = require("zigbee-clusters");
async function initTargetTemperatureDevice(device, zclNode, { capabilityId = 'target_temperature', cluster = zigbee_clusters_1.CLUSTER.THERMOSTAT, attributeName = 'occupiedHeatingSetpoint', minChange = 10, maxInterval, endpointId, } = {}) {
    await (0, attributeDevice_1.initReadWriteCapability)(device, zclNode, capabilityId, cluster, attributeName, (value) => {
        // Value comes from int16
        // Check for invalid values
        if (value == 0x8000)
            return null;
        if (value < -0x154D || value > 0x7FFE) {
            device.error('Temperature value outside valid range');
            return null;
        }
        // MeasuredValue represents the temperature in degrees Celsius as follows:
        // MeasuredValue = 100 x Temperature in degrees Celsius
        return Math.round((value / 100) * 10) / 10;
    }, (value) => Math.round(value * 100), minChange, maxInterval, endpointId);
}
exports.default = initTargetTemperatureDevice;
