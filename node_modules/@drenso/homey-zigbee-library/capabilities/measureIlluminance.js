"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const zigbee_clusters_1 = require("zigbee-clusters");
const attributeDevice_1 = require("../lib/attributeDevice");
async function initMeasureIlluminanceDevice(device, zclNode, { capabilityId = 'measure_luminance', cluster = zigbee_clusters_1.CLUSTER.ILLUMINANCE_MEASUREMENT, attributeName = 'measuredValue', minChange = 1000, maxInterval, endpointId, } = {}) {
    await (0, attributeDevice_1.initReadOnlyCapability)(device, zclNode, capabilityId, cluster, attributeName, (value) => {
        // Value comes from uint16
        // Check for special values
        if (value == 0xFFFF)
            return null;
        if (value == 0x0000)
            return 0;
        if (value < 0x0000 || value > 0xFFFF) {
            device.error('Illuminance value outside valid range');
            return null;
        }
        // MeasuredValue represents the Illuminance in Lux (symbol lx) as follows:
        // MeasuredValue = 10,000 x log10 Illuminance + 1
        return Math.round(10 ** ((value - 1) / 10000));
    }, minChange, maxInterval, endpointId);
}
exports.default = initMeasureIlluminanceDevice;
