"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const zigbee_clusters_1 = require("zigbee-clusters");
const attributeDevice_1 = require("../lib/attributeDevice");
async function initMeasureHumidityDevice(device, zclNode, { capabilityId = 'measure_humidity', cluster = zigbee_clusters_1.CLUSTER.RELATIVE_HUMIDITY_MEASUREMENT, attributeName = 'measuredValue', minChange = 10, maxInterval, endpointId, } = {}) {
    await (0, attributeDevice_1.initReadOnlyCapability)(device, zclNode, capabilityId, cluster, attributeName, (value) => {
        // Value comes from uint16
        // Check for invalid values
        if (value == 0xFFFF)
            return null;
        if (value < 0x0000 || value > 0x2710) {
            device.error('Humidity value outside valid range');
            return null;
        }
        // MeasuredValue represents the relative humidity in % as follows:
        // MeasuredValue = 100 x Relative humidity
        return Math.round((value / 100) * 10) / 10;
    }, minChange, maxInterval, endpointId);
}
exports.default = initMeasureHumidityDevice;
